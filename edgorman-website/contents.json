{
  "headimg": null,
  "title": "EdGorman Github Website",
  "date": "07-07-2020",
  "time": "13:10",
  "type": "Web Development",
  "links": [
    "email", "twitter", "linkedin"
  ],
  "content": [
    "p Hello there! Welcome to my personal website (the one you're viewing right now!) where I explain the inspiration and technical implementation for the various aspects you may have or will encounter. This is actually my second time writing this post as I have since expanded greatly on the scope of the site, as you will learn shortly.",
    "b Terminal",
    "p I initially began this site with the idea for creating a command line interface which would directly interact with the files in the web folder itself. The purpose behind this was to avoid sinking time into designing a user interface, and focus my attentino on the actual coding projects. I found JQuery Terminal [1], a client-side terminal interface with the ability to add custom commands and interact with Ajax requests, which would be my method for interacting with the site since server-side requests are not allowed on Github Pages.",
    "i terminal.png~Example of Terminal.",
    "p I went about implementing the basic commands such as cd, clear, exit, ls, and print, as well as one advanced command 'run' which would perform pre-written instructions according to executable files activated by the user. This included the ability to email me (see /about-me/message-me.exe), as well as redirect to new webpages or simply print a message to the user. After some trials with my brother and father to help make this more intuitive, I had finished! However, I had got to thinking what if I just wanted to show someone the project without navigating the site... uh oh.",
    "b Post Viewer",
    "p So naturally I began work on a post viewer webpage capable of automatically filling in information from a contents.json file in the same directory. This included the title of the page, time/date of the post, which social links to show, the writing in the page itself and the references section at the end. Alongside this was the dark mode button for my nocturnal friends, and several formatting types for the contents including headings, images, quotes and pseudocode.",
    "i postviewer.png~Example of Post Viewer.",
    "p For the website I wanted it to automatically redirect to some landing page if an incorrect path was entered, yet I wanted people to be able to directly visit each post. Sounds easy right, just place an index.html in each folder where theres a post (not what I had in mind ;)).I decided to host a single post viewer webpage as the 404 page for the entire website: it would first check whether the url referred to a folder containing a contents.json file and if so display the post viewer; else, redirect to some landing page. I didnt want this landing page to be the terminal in case that was too confusing though, and so I decided to construct a tab system... not again!!!",
    "b Tab System",
    "p Right hopefully this is the last big think I decide to implement (for the sake of the rest of my summer). This is where the site as it is starts to come together, with the EdOS landing page where users can open tabs and either access the terminal, file explorer or post viewer. The file explorer is simply an extension of the terminal page but with a gui so that was rather simple to implement since it just required the ability to open files and run executable scripts. The style is clearly influenced by a Chrome style application but I didnt want to spend forever designing my own.",
    "i tabsystem.png~Example of Tab Page.",
    "p And there you have it! This is how the site as it is came to be, I hope you enjoyed reading this article and remember to message-me.exe if you have any suggestions or projects you'd like to discuss. Thanks for reading.",
    "p - Ed"
  ],
  "refs": [
    "JQuery Terminal~https://terminal.jcubic.pl/"
  ]
}
